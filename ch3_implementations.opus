% กล่าวถึงรายละเอียดการดำเนินงานและการพัฒนาโครงงานทั้งหมด แยกเป็นหัวข้อตามความเหมาะสม
% หัวข้อในนี้เป็นเพียงตัวอย่างเท่านั้น ท่านสามารถแยกหัวข้อได้เองตามความเหมาะสมของเนื้อหาโครงงาน

_เนื้อหาในส่วนนี้เป็นตัวอย่างการเขียนการพัฒนา_\\
_ท่านสามารถแก้ไขได้ในไฟล์_ `[[current_file]]`

[[section: อุปกรณ์]]
	[[subsection: อุปกรณ์ด้านซอฟต์แวร์]]
		ซอฟต์แวร์ที่ใช้ทั้งหมดประกอบด้วย
		[[subsubsection: Python 3.4]]
			คอมไพเลอร์ภาษา Python ที่สนับสนุนภาษา Python รุ่น 3.4
		[[subsubsection: LaTeX Suite]]
			ชุดซอฟต์แวร์สำหรับคอมไพล์เอกสาร \LaTeX ที่สามารถสร้างไฟล์ PDF ได้
		[[subsubsection: Sublime Text 3]]
			โปรแกรมแก้ไขข้อความ (Text Editor) ที่มีความสามารถหลากหลาย ซึ่งช่วยในการจัดรูปแบบ (Formatting)
			ใส่สีซอร์สโค้ด (Code Highlighting) และรวมไปถึงคุณสมบัติการแก้ไขข้อความอื่นๆ ที่เหมาะกับการแก้ไขซอร์สโค้ด

[[section: ภาพรวมของโครงงาน]]
	[[subsection: การออกแบบระบบ Opus]]
		ระบบ Opus จะทำงานโดยอาศัย Template เป็นเอกสารต้นฉบับ
		แล้วจึงนำข้อมูลจากผู้ใช้ที่ได้ตั้งค่าไว้มาประกอบเป็นเอกสารเรียงพิมพ์
		เพื่อนำไปคอมไพล์กับชุดซอฟต์แวร์ \LaTeX อีกทีหนึ่ง

	[[subsection: การออกแบบไฟล์ Template]]
		ในไฟล์ Template อาจประกอบไปด้วยคำค้น (Keyword)
		ที่อาจมีการระบุการเลือกใช้งานข้อมูลได้ (Selector)

		โดยตัวคำค้นจะมีอยู่ 2 รูปแบบคือ

		[[subsubsection: คำค้นสำหรับแทนที่ (Keyword)]]
			คำค้นสำหรับแทนที่ เป็นคำเฉพาะที่นำไว้แทนที่ข้อมูลต่างๆ เช่น

			[[ulist]]
			# ชื่อโครงงาน
			# ชื่อผู้จัดทำโครงงาน
			# ชื่ออาจารย์ที่ปรึกษา
			# ชื่อกรรมการโครงงาน
			[[end]]

			ซึ่งข้อมูลเหล่านี้จะนำมาจากไฟล์หลักของผู้ใช้ (Project File)

		[[subsubsection: คำค้นสำหรับเรียกงาน (Include)]]
			คำค้นสำหรับเรียกงาน เป็นคำเฉพาะที่ใช้สำหรับเรียกไฟล์ ​Template อื่นๆ
			โดยจะนำเนื้อหาในไฟล์มาแทรกไว้ ณ ตำแหน่งที่ระบุ

	[[subsection: การออกแบบภาษา Opus]]
		ภาษา Opus จะถูกออกแบบมาให้เป็นส่วนขยายของภาษา \LaTeX อีกทีหนึ่ง กล่าวคือ
		เอกสาร Opus จะเป็นเอกสารที่มีความสามารถมากกว่าหรือเทียบเท่ากับ \LaTeX
		และหมายความว่าผู้ใช้ สามารถใช้คำสั่ง \LaTeX ในการใช้งานในเอกสาร Opus ได้ทันที

	[[subsection: การออกแบบตัวแปลภาษา Opus]]
		ตัวแปลภาษา จะทำงานโดยใช้ Regular Expression ในการจับคำสั่งต่างๆ
		แล้วจึงใช้ข้อมูลที่ได้จากคำสั่ง มาสร้างเป็นคำสั่ง \LaTeX อีกทีหนึ่ง  เมื่อแปลเสร็จ
		จะได้เอกสารออกมาเป็นไฟล์ \LaTeX ที่มีขนาดใหญ่เพียงไฟล์เดียว
		แล้วจึงนำไปป้อนให้กับชุดซอฟต์แวร์ \LaTeX เพื่อคอมไพล์ต่อไป
